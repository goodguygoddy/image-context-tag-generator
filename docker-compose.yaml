version: '3.8'

services:
  mongo:
    image: mongo:latest
    command: ["mongod", "--quiet"]
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -q [m]ongod"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - app-network

  rabbitmq:
    image: "rabbitmq:management"
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - app-network

  ai-model:
    build:
      context: ./ai-model
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
        required: true
      mongo:
        condition: service_healthy
        required: true
    networks:
      - app-network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      rabbitmq:
        condition: service_healthy
        required: true
      mongo:
        condition: service_healthy
        required: true
    networks:
      - app-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "4173:80"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local
